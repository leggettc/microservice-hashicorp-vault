/**
 * Created by hiteshkalra on 10/17/19.
 */

const connectorsDAO = require('../data/connectorsDAO');
const constructsDAO = require('../data/constructsDAO');
const _ = require('lodash')

exports.getConnectorDetails = async (connectorId) =>{
  //TODO: Cache manifest instead
  const response = {}

  const connectorsInfo = await connectorsDAO.getConnectorList([connectorId])

  const constructsList = _.flatten(connectorsInfo.map(k=>{
    if(k && k.properties) {
      return Object.keys(k.properties)
    }
  })).filter(k=>k!= null)

  const constructsInfo = await constructsDAO.getConstructsListAdvanced(constructsList,true,false,true)
  const connector = connectorsInfo[0]
  let mergedPropertiesPerConnection = []

  if(connector && connector.properties) {
    const keys = Object.keys(connector.properties);
    let tmpProps = {properties:{}}

    keys.forEach(k=>{
      if(constructsInfo[k]){
        tmpProps.properties[k] = constructsInfo[k]
      }
    })

    const mergedPropsConnector = _.merge({},tmpProps.properties, connector.properties)

    connector.properties = mergedPropsConnector

    const mergedProps = _.merge({},tmpProps.properties, connector.properties)

    connector.properties = mergedProps

  }

  connector.connectorId = connector._id;
  delete connector._id;

  return {connector}
}