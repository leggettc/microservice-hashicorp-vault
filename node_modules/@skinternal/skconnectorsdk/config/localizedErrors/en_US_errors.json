{
  "1000": {
    "displayMessage": "JSON data parsing error",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "1001": {
    "displayMessage": "Requested resource could not be found",
    "internalMessage": null,
    "httpResponseCode": 404
  },
  "1002": {
    "displayMessage": "Internal error. Please try again",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "1003": {
    "displayMessage": "State Token not found in request header or cookies",
    "internalMessage": null,
    "httpResponseCode": 401
  },
  "1004": {
    "displayMessage": "Unauthorized!",
    "internalMessage": null,
    "httpResponseCode": 401
  },
  "1005": {
    "displayMessage": "Internal error. Please try again",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "1006": {
    "displayMessage": "Configuration Info not found",
    "internalMessage": null,
    "httpResponseCode": 404
  },
  "1007": {
    "displayMessage": "Configuration Id not found",
    "internalMessage": null,
    "httpResponseCode": 404
  },
  "1999": {
    "displayMessage": "Unauthorized!",
    "internalMessage": null,
    "httpResponseCode": 401
  },
  "2000": {
    "displayMessage": "Customer record already exists",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "2001": {
    "displayMessage": "Incorrect email or password",
    "internalMessage": null,
    "httpResponseCode": 401
  },
  "2002": {
    "displayMessage": "Error creating customer record",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "2003": {
    "displayMessage": "Error retrieving customer record",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "2004": {
    "displayMessage": "Error changing password",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "2005": {
    "displayMessage": "Customer record not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "2006": {
    "displayMessage": "Error resetting customer password",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "2007": {
    "displayMessage": "Invalid session",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "3000": {
    "displayMessage": "App record already exists",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "3001": {
    "displayMessage": "Error creating app",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "3002": {
    "displayMessage": "Error retrieving app",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "3003": {
    "displayMessage": "Error updating app",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "3004": {
    "displayMessage": "App not found",
    "internalMessage": null,
    "httpResponseCode": 404
  },
  "3005": {
    "displayMessage": "Error deleting App",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "3006": {
    "displayMessage": "Error deleting app record",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "3007": {
    "displayMessage": "No authenticators defined in app",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4000": {
    "displayMessage": "User record already exists",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4001": {
    "displayMessage": "Internal error. Error creating user record",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "4002": {
    "displayMessage": "Registration Error: Response missing one or more of id/rawId/response/type fields, or type is not public-key!",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4003": {
    "displayMessage": "User record not found",
    "internalMessage": null,
    "httpResponseCode": 404
  },
  "4004": {
    "displayMessage": "webauthn response missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4005": {
    "displayMessage": "Id field missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4006": {
    "displayMessage": "Id not of type string",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4007": {
    "displayMessage": "Id not base64Url string",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4008": {
    "displayMessage": "rawId field missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4009": {
    "displayMessage": "response field missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4010": {
    "displayMessage": "type is not public-key",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4011": {
    "displayMessage": "attestationObject is not of type string",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4012": {
    "displayMessage": "clientDataJSON is missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4013": {
    "displayMessage": "clientData not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4014": {
    "displayMessage": "clientData type is not the correct value - webauthn.create",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4015": {
    "displayMessage": "clientData  - challenge is not of the right type (string, base64url)",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4016": {
    "displayMessage": "clientData  - origin mismatch",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4017": {
    "displayMessage": "clientData  - tokenBinding error - Either not the right type or wrong value )",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4018": {
    "displayMessage": "response.attestationObject missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4019": {
    "displayMessage": "challenge expired or not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4020": {
    "displayMessage": "challenge mismatch",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4021": {
    "displayMessage": "challenge fido user Id missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4022": {
    "displayMessage": "Attestation Verification failed",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4023": {
    "displayMessage": "Internal Error: App User info not found",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "4024": {
    "displayMessage": "Internal Error: App info not found",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "4025": {
    "displayMessage": "user handle missing or not a string",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4026": {
    "displayMessage": "signature missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4027": {
    "displayMessage": "signature is not base64url",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4028": {
    "displayMessage": "clientData type is not the correct value - webauthn.get",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4029": {
    "displayMessage": "authenticatorData missing from response",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4030": {
    "displayMessage": "authenticatorData is not base64url encoded",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4031": {
    "displayMessage": "rpId could not be computed",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4032": {
    "displayMessage": "Assertion Verification failed",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4033": {
    "displayMessage": "ctapMakeCredResp missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4034": {
    "displayMessage": "ctapMakeCredResp format is missing or not a string",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4035": {
    "displayMessage": "attStmt missing or is not an object",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4036": {
    "displayMessage": "authData could not be parsed",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4037": {
    "displayMessage": "authData counter is not a positive integer",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4038": {
    "displayMessage": "authData aaguid is missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4039": {
    "displayMessage": "authData aaguid is non-zero",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4040": {
    "displayMessage": "authData flag UP not set",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4041": {
    "displayMessage": "authData credID present, but flag AT not set",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4042": {
    "displayMessage": "authData missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4043": {
    "displayMessage": "Error cbor decoding makeCredResponse",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4044": {
    "displayMessage": "authData is not Buffer",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4045": {
    "displayMessage": "authData Buffer length is 0",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4046": {
    "displayMessage": "Error cbor decoding of COSEPublicKey",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4047": {
    "displayMessage": "fmt not supported",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4048": {
    "displayMessage": "Error verifying Signature",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4049": {
    "displayMessage": "attStmt.x5c element in array is not a buffer",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4050": {
    "displayMessage": "None Attestation Format: attStmt has fields",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4051": {
    "displayMessage": "Android-Key Attestation Format: clientIdHash in the certificate doesnt match auth clientIdHash!",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4052": {
    "displayMessage": "Error parsing authData Buffer - invalid length",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4053": {
    "displayMessage": "ASN1 needs to be of type buffer",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4054": {
    "displayMessage": "attStmt of length 0 ",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4055": {
    "displayMessage": "attStmt.alg is not present or is not of type number",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4056": {
    "displayMessage": "attStmt.alg is not supported",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4057": {
    "displayMessage": "attStmt.sig is either missing or not the correct type or of length 0",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4058": {
    "displayMessage": "metadata statement not found for aaguid",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4059": {
    "displayMessage": "Attestation Packed Format: Self/Surrogate type, but attStmt.x5c field present",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4060": {
    "displayMessage": "Attestation Packed Format: Status issue",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4061": {
    "displayMessage": "attStmt.x5c not present",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4062": {
    "displayMessage": "CredId not found on the server",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4063": {
    "displayMessage": "Received Counter is less than equal to the value of the counter stored on the server",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4064": {
    "displayMessage": "UV/ User Verification missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4065": {
    "displayMessage": "Assertion: rpIdhash mismatch",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4066": {
    "displayMessage": "MDS TOC hash mismatch",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4067": {
    "displayMessage": "Internal Error reading Tocs Folder",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4068": {
    "displayMessage": "Internal Error reading metadataStatements Folder",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4069": {
    "displayMessage": "Internal Error retrieving metadataStatement",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4070": {
    "displayMessage": "Internal Error retrieving toc",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4071": {
    "displayMessage": "Error fetching metadata statement",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4072": {
    "displayMessage": "Error fetching metadata statement",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4073": {
    "displayMessage": "Error parsing metadata statement",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4074": {
    "displayMessage": "Attestation Format u2f: Either attStmt.x5c is missing or is not of type Array or doesnt have exactly one element",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4075": {
    "displayMessage": "EC Public key - x is undefined or not equal to 32 bytes",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4076": {
    "displayMessage": "EC Public key - y is undefined or not equal to 32 bytes",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4077": {
    "displayMessage": "Attestation Format packed: Both x5c and ecdaaKeyId present in attStmt",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4078": {
    "displayMessage": "Attestation Format packed: eedaaKeyId not supported yet.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4079": {
    "displayMessage": "Cert was empty - 0 bytes",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4080": {
    "displayMessage": "Error parsing ASN.1",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4081": {
    "displayMessage": "Certificate not valid yet",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4082": {
    "displayMessage": "Certificate Expired.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4083": {
    "displayMessage": "Certificate chain not valid.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4084": {
    "displayMessage": "androidSafetyNet attestation: ver not present.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4085": {
    "displayMessage": "androidSafetyNet attestation: response is empty.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4086": {
    "displayMessage": "androidSafetyNet attestation: JWS Verification failed.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4087": {
    "displayMessage": "androidSafetyNet attestation: Payload JSON parse error.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4088": {
    "displayMessage": "androidSafetyNet attestation: Payload undefined.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4089": {
    "displayMessage": "androidSafetyNet attestation: Timestamp is valid in the future.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4090": {
    "displayMessage": "androidSafetyNet attestation: Timestamp expired - over 60 seconds.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4091": {
    "displayMessage": "androidSafetyNet attestation: Nonce and signature Hash do not match.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4092": {
    "displayMessage": "androidSafetyNet attestation: ctsProfileMatch is false.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4093": {
    "displayMessage": "androidSafetyNet attestation: key.kid is not equal to attest.android.com.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4094": {
    "displayMessage": "TPM attestation: ECDAA attesation is not currently supported.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4095": {
    "displayMessage": "TPM attestation: x5c field needs to be of type Array.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4096": {
    "displayMessage": "TPM attestation: no certificates in x5c field.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4097": {
    "displayMessage": "TPM attestation: expected certInfo to be ArrayBuffer.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4098": {
    "displayMessage": "TPM attestation: certInfo had bad magic number.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4099": {
    "displayMessage": "TPM attestation: got wrong type. expected 'TPM_ST_ATTEST_CERTIFY'.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4100": {
    "displayMessage": "TPM attestation: left over bytes when parsing cert info.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4101": {
    "displayMessage": "TPM attestation: expected pubArea to be ArrayBuffer.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4102": {
    "displayMessage": "TPM attestation: only TPM_ALG_RSA supported.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4103": {
    "displayMessage": "TPM attestation: left over bytes when parsing public area.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4104": {
    "displayMessage": "TPM attestation: unknown structure tag:.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4105": {
    "displayMessage": "TPM attestation: expected TPM version 2.0.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4106": {
    "displayMessage": "TPM attestation: only RSA keys are currently supported.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4107": {
    "displayMessage": "TPM attestation: RSA exponents of WebAuthn credentialPublicKey and TPM publicArea did not match.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4108": {
    "displayMessage": "TPM attestation: RSA 'n' of WebAuthn credentialPublicKey and TPM publicArea did not match.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4109": {
    "displayMessage": "TPM attestation: unknown algorithm.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4110": {
    "displayMessage": "TPM attestation: extraData hash did not match authnrData + clientDataHash hashed.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4111": {
    "displayMessage": "TPM attestation: pubAreaName hash did not match hash of publicArea.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4112": {
    "displayMessage": "TPM attestation: pubAreaNameAlg did not match certInfoNameAlg.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4113": {
    "displayMessage": "TPM attestation: signature verification failed.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4114": {
    "displayMessage": "TPM attestation: expected certificate to be x.509v3.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4115": {
    "displayMessage": "TPM attestation: attestation certificate MUST have empty subject.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4116": {
    "displayMessage": "TPM attestation: Subject Alternative Name extension MUST be set as defined in [TPMv2-EK-Profile] section 3.2.9.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4117": {
    "displayMessage": "TPM attestation: subject alternative name did not contain directory name.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4118": {
    "displayMessage": "TPM attestation: subject alternative name did not list manufacturer.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4119": {
    "displayMessage": "TPM attestation: subject alternative name did not list model number.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4120": {
    "displayMessage": "TPM attestation: subject alternative name did not list firmware version.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4121": {
    "displayMessage": "TPM attestation: the Extended Key Usage extension MUST contain 'tcg-kp-aik-certificate'.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4122": {
    "displayMessage": "TPM attestation: the Basic Constraints extension MUST have the CA component set to false.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4123": {
    "displayMessage": "TPM attestation: authnrData AAGUID did not match AAGUID in attestation certificate.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4124": {
    "displayMessage": "TPM attestation: Unsupported hash type.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4125": {
    "displayMessage": "No user credentials found.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4126": {
    "displayMessage": "Leaf Certificate Revoked.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4127": {
    "displayMessage": "Intermediate Certificate Revoked.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4128": {
    "displayMessage": "Error fetching crl",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4129": {
    "displayMessage": "Error fetching crl",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4130": {
    "displayMessage": "Error parsing crl",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4131": {
    "displayMessage": "x5c is not an array",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4132": {
    "displayMessage": "Internal Error - origins not defined.",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "4133": {
    "displayMessage": "Totp not enabled.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4134": {
    "displayMessage": "Internal Error: could not get user Info",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "4135": {
    "displayMessage": "Internal Error: credential of the correct type not found",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "4136": {
    "displayMessage": "Fido2 Auth failed",
    "internalMessage": null,
    "httpResponseCode": 401
  },
  "4137": {
    "displayMessage": "Internal error: No Mds records found",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "4138": {
    "displayMessage": "Error fetching Toc",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4139": {
    "displayMessage": "Error fetching Toc",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4140": {
    "displayMessage": "Internal Error: ms status entry payload not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4141": {
    "displayMessage": "Internal Error: ms payload not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4142": {
    "displayMessage": "User not found",
    "internalMessage": null,
    "httpResponseCode": 404
  },
  "4143": {
    "displayMessage": "Error deleting User",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4144": {
    "displayMessage": "Error deleting user record",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4145": {
    "displayMessage": "RP/Organization Name is not defined. Please configure fido2 settings in the developer portal.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4146": {
    "displayMessage": "Error getting user context",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "4147": {
    "displayMessage": "Error getting user context",
    "internalMessage": null,
    "httpResponseCode": 500
  },
  "4148": {
    "displayMessage": "Error updating Mfa Flag",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4149": {
    "displayMessage": "User not found",
    "internalMessage": null,
    "httpResponseCode": 404
  },
  "4150": {
    "displayMessage": "Error updating mfa flag",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4151": {
    "displayMessage": "User not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4152": {
    "displayMessage": "Otp mismatch",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4153": {
    "displayMessage": "Authentication timed out",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4154": {
    "displayMessage": "Authentication internal error",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4155": {
    "displayMessage": "Totp credential not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4156": {
    "displayMessage": "SMS feature not enabled.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4157": {
    "displayMessage": "Error sending SMS.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4158": {
    "displayMessage": "OTP mismatch.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4159": {
    "displayMessage": "SMS Internal Error.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4160": {
    "displayMessage": "Error updating SMS credential in DB.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4161": {
    "displayMessage": "Error removing credential",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4162": {
    "displayMessage": "Error removing credential",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4163": {
    "displayMessage": "Credential not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4164": {
    "displayMessage": "Error updating Totp Credential",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4165": {
    "displayMessage": "Usernameless Authentication internal error",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4166": {
    "displayMessage": "userHandle missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4167": {
    "displayMessage": "appId/companyId missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4168": {
    "displayMessage": "User not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4169": {
    "displayMessage": "Challenge is not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4170": {
    "displayMessage": "Device not authorized to access challenge",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4171": {
    "displayMessage": "Challenge user key missing",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4172": {
    "displayMessage": "Internal error",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4173": {
    "displayMessage": "Credential already exists",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4174": {
    "displayMessage": "Cannot enable MFA as no credentials exist",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4175": {
    "displayMessage": "Request rejected by user",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4176": {
    "displayMessage": "OTP Mode not yet supported",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4177": {
    "displayMessage": "Error making phone call.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4178": {
    "displayMessage": "Email validation failed.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4179": {
    "displayMessage": "Internal error initiating auth.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4180": {
    "displayMessage": "Internal error initiating auth.",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4181": {
    "displayMessage": "Device not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4182": {
    "displayMessage": "Device not registered",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4183": {
    "displayMessage": "Incorrect number of certificates in chain",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "4184": {
    "displayMessage": "Android Key Root not trusted",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5000": {
    "displayMessage": "Device record already exists",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5001": {
    "displayMessage": "Device record not found",
    "internalMessage": null,
    "httpResponseCode": 404
  },
  "5002": {
    "displayMessage": "Internal Error: Update Device record failed",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5003": {
    "displayMessage": "Error creating device",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5004": {
    "displayMessage": "Error creating device challenge",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5005": {
    "displayMessage": "Error retrieving device",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5006": {
    "displayMessage": "Device Credential not found",
    "internalMessage": null,
    "httpResponseCode": 404
  },
  "5007": {
    "displayMessage": "Device Fido2 registration complete error",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5008": {
    "displayMessage": "Error removing credentials",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5009": {
    "displayMessage": "Error updating device token",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5010": {
    "displayMessage": "Device Fido2 Authentication complete error",
    "internalMessage": null,
    "httpResponseCode": 401
  },
  "5011": {
    "displayMessage": "No Devices found for user",
    "internalMessage": null,
    "httpResponseCode": 404
  },
  "5012": {
    "displayMessage": "Error unlinking device from app",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5013": {
    "displayMessage": "Record not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "5014": {
    "displayMessage": "Record not found",
    "internalMessage": null,
    "httpResponseCode": 400
  },
  "ErrorClasses": {
    "1000": "Generic errors Or Internal connection or http route errors",
    "2000": "Customer errors.",
    "3000": "App errors",
    "4000": "User errors",
    "5000": "Device errors"
  },
  "FriendlyFormatting":{
    "has less length than allowed":"is blank or is shorter than allowed",
    "has longer length than allowed":"is longer than allowed"
  }
}
