/**
 * Created by hiteshkalra on 12/15/19.
 */
/**
 * Created by hiteshkalra on 5/21/18.
 */


const constants = require('../../config/constants');
const collectionName = constants.deviceUsersTable;
const db = global.mongo;
const myCollection = db.collection(collectionName);

exports.createDevice = (deviceId,publicKey,credId, deviceDetails) => {
  const device = {
    _id: deviceId,publicKey,credId, deviceDetails,createdDate: Date.now()
  }
  return new Promise((resolve,reject) => {
    myCollection.insert(device, (err,response) =>{
      if(err) {
        console.log (err);
        return reject(err)
      }
      resolve(response)
    })
  })
}


exports.createDevice2 = (props) => {

  const device = {
    ...props,_id: props.id,createdDate: Date.now()
  }
  return new Promise((resolve,reject) => {
    myCollection.insert(device, (err,response) =>{
      if(err) {
        console.log (err);
        return reject(err)
      }
      resolve(response)
    })
  })
}

exports.getDevice = (deviceId) => {
  return new Promise((resolve,reject) => {
    myCollection.findOne({_id: deviceId}, (err,response) =>{
      if(err) {
        console.log (err);
        return reject(err)
      }
      resolve(response)
    })
  })
}


exports.updateDeviceCredentials = (deviceId,credInfo) => {
  const device = {_id : deviceId}
  const deviceCredential = {
    $push: {
      deviceCredentials: credInfo
    }
  }
  return new Promise((resolve,reject) => {
    myCollection.update(device,deviceCredential,{new:true}, (err,response) =>{
      if(err) {
        console.log (err);
        return reject(err)
      }
      resolve(response)
    })
  })

}


exports.updateDeviceToken = (deviceId,deviceToken) => {
  const device = {_id : deviceId}
  const update = {
    $set: {
      deviceToken: deviceToken
    }
  }
  return new Promise((resolve,reject) => {
    myCollection.update(device,update,{new:true}, (err,response) =>{
      if(err) {
        console.log (err);
        return reject(err)
      }
      resolve(response)
    })
  })

}