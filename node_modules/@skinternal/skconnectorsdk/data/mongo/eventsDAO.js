/**
 * Created by hiteshkalra on 8/27/18.
 */


const _ = require('lodash'),
constants = require('../../config/constants');

const collectionName = constants.eventsTable;
const db = global.mongo;
const myCollection = db.collection(collectionName);


const createEvent = (props) => {
  const event = {
    _id: props.eventId,
    ...props,
    createdDate: Date.now()
  }
  if (event.details) {
    event.details = JSON.stringify(event.details)
  }

  return new Promise((resolve,reject) => {
    myCollection.insert(event, (err,response) =>{
      if(err) {
        console.log (err);
        return reject(err)
      }
      resolve(response)
    })
  })
}

const getEvent = (eventId) => {
  return new Promise((resolve, reject) => {
    myCollection.findOne( {_id: eventId}, (err, response) => {
      if (err) {
        console.log(err);
        return reject(err)
      }
      if (response && response.details) {
        try {
          response.details = JSON.parse(response.details)
        } catch(err) {
          console.log("FYI - error parsing response")
        }
      }
      resolve(response)
    })
  })
}

const updateEventStatus = (eventId,status,updatedBy,props) => {

  const update = {
    $set: {status:status,statusUpdatedDate: Date.now(),statusUpdatedBy:updatedBy,...props}
  }

  return new Promise((resolve,reject) => {
    myCollection.findAndModify({query:{_id:eventId},update,new:false}, (err,response)=>{
      if(err) {
        console.log(err);
        return reject(err);
      }
      resolve(response);
    })
  })
}

module.exports = {
  createEvent,
  getEvent,
  updateEventStatus

}