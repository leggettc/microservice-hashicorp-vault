/**
 * Created by hiteshkalra on 7/5/19.
 */
constants = require('../../config/constants');

const db = global.mongoDB;
const myCollection = db.collection(constants.companyTable);
const skUtil = require('../../modules/util')
const nodeCache = require('node-cache')

const companyCache = new nodeCache({ stdTTL: 86400 })

exports.invalidateCache = (companyId) =>{
  console.log('Invalidating Company Cache',companyId)
  companyCache.del(companyId)
}

exports.getCompany = (companyId) => {

  let companyInfo = companyCache.get(companyId)
  if(companyInfo){
    return companyInfo
  }
  const query = {_id: companyId};

  return new Promise((resolve, reject) => {
    myCollection.findOne(query, async (err, response) => {
      if (err) {
        console.log(err);
        return reject(err);
      }
      const finalResponse = await skUtil.companyRecordDecrypt(response)
      companyCache.set(companyId,finalResponse)
      resolve(finalResponse);
    });
  });
};
