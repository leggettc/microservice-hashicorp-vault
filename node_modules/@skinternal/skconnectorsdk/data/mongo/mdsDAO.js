/**
 * Created by hiteshkalra on 9/6/18.
 */


const  _ = require('lodash'),
  constants = require('../../config/constants');

const collectionName = constants.mdsTable;
const db = global.mongo;
const myCollection = db.collection(collectionName);

const getAll = () => {
  return new Promise((resolve, reject) => {
    myCollection.find( (err, response) => {
      if (err) {
        console.log(err);
        return reject(err);
      }
      resolve(response);
    });
  });
};

const updatePayload = (id,payload,returnNew) => {

  let shouldReturnNew = false;
  if(returnNew) {
    shouldReturnNew = true;
  }

  const update = {
    $set: {payload}
  };

  return new Promise((resolve,reject) => {
    myCollection.findAndModify({query:{_id:id},update,new:shouldReturnNew}, (err,response)=>{
      if(err) {
        console.log(err);
        return reject(err);
      }
      resolve(response);
    });
  });
};


const createRecord = (id,env,type,payload,tocId) => {
  const newRecord = {
    _id: id, env,type,payload:payload,tocId, createdDate: Date.now()
  };
  return new Promise((resolve,reject) => {
    myCollection.insert(newRecord, (err,response) =>{
      if(err) {
        console.log (err);
        return reject(err);
      }
      resolve(response);
    });
  });
};


const getRecord = (id) => {

  return new Promise((resolve,reject) => {
    myCollection.findOne({_id:id}, (err,response) =>{
      if(err) {
        console.log (err);
        return reject(err);
      }
      resolve(response);
    });
  });
};


module.exports = {
  getAll,
  updatePayload,
  createRecord,
  getRecord,
};