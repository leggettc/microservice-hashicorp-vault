/**
 * Created by hiteshkalra on 9/6/18.
 */


const  _ = require('lodash'),
  constants = require('../../config/constants');

const collectionName = constants.mdsTable;
const db = global.mongoDB;
const myCollection = db.collection(collectionName);

const getAll = () => {
  return new Promise((resolve, reject) => {
    myCollection.find().toArray((err, response) => {
      if (err) {
        console.log(err);
        return reject(err);
      }
      resolve(response);
    });
  });
};

const updatePayload = (id,payload,returnNew) => {

  let shouldReturnNew = false;
  if(returnNew) {
    shouldReturnNew = true;
  }

  const query = {_id: id};
  const update = {
    $set: {payload}
  };
  const options = {
    returnDocument: 'after'
  };


  return new Promise((resolve,reject) => {
    if (returnNew) {
      myCollection.findOneAndUpdate(query, update, options, (err,response)=>{
        if(err) {
          console.log(err);
          return reject(err);
        }
        resolve(response.value);
      });
    } else {
      myCollection.updateOne(query, update, (err, response) => {
        if (err) {
          console.log(err);
          return reject(err);
        }
        resolve(response);
      })
    }
  });
};


const createRecord = (id,env,type,payload,tocId) => {
  const newRecord = {
    _id: id, env,type,payload:payload,tocId, createdDate: Date.now()
  };
  return new Promise((resolve,reject) => {
    myCollection.insertOne(newRecord, (err,response) =>{
      if(err) {
        console.log (err);
        return reject(err);
      }
      resolve(newRecord);
    });
  });
};


module.exports = {
  getAll,
  updatePayload,
  createRecord,
};