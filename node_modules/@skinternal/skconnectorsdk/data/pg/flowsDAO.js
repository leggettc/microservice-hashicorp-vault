/**
 * Created by hiteshkalra on 7/12/19.
 */

const constants = require('../../config/constants');

const collectionName = constants.flowsTable;


exports.getFlow = async (companyId,flowId) => {

  const queryParams = [`${flowId}`,`${companyId}`]

  const query = `
    SELECT * FROM ${collectionName} 
    WHERE flowId = $1 AND companyId = $2
    ;
    `;
  try {
    const response = await global.pg.query(query,queryParams);
    if (!(response && response.rows && Array.isArray(response.rows) &&  response.rows.length >0)){
      return
    }
    const finalResponse = {_id: {flowId:response.rows[0].flowid,companyId: response.rows[0].companyid}, ...response.rows[0].data}
    return finalResponse
  } catch (err) {
    throw err
  }

};


exports.updateFlow = async (companyId,flowId,props,removeFields) => {


  let query
  let queryParams = [`${flowId}`,`${companyId}`]

  if(props && Object.keys(props).length >0 && !removeFields){
    query = `UPDATE ${collectionName}    SET data  = data || $3    WHERE flowId = $1 AND companyId = $2`;
    queryParams.push(`${JSON.stringify(props)}`)
  }else if(!(props && Object.keys(props).length >0) && removeFields) {
    query = `UPDATE ${collectionName}    SET data  = data `;
    Object.keys(removeFields).forEach((k,kIndex)=>{
      query += ` #- $${kIndex+3}`
      queryParams.push(`{${k}}`)
    })
    query += `\nWHERE flowId = $1 AND companyId = $2`
  } else if ( props && removeFields) {
    query = `UPDATE ${collectionName}    SET data  = data || $3 `;
    queryParams.push(`${JSON.stringify(props)}`)
    Object.keys(removeFields).forEach((k,kIndex)=>{
      query += ` #- $${kIndex+4}`
      queryParams.push(`{${k}}`)
    })
    query += `\nWHERE flowId = $1 AND companyId = $2`
  }
  query += ` \nRETURNING *;`

  console.log(query)
  console.log(queryParams)

  try {
    const response = await global.pg.query(query,queryParams);
    if (!(response && response.rows && Array.isArray(response.rows) &&  response.rows.length >0)){
      return
    }
    return {_id: {flowId:response.rows[0].flowid,companyId: response.rows[0].companyid}, ...response.rows[0].data}
  } catch (err) {
    console.log(err)
    throw err
  }
}

