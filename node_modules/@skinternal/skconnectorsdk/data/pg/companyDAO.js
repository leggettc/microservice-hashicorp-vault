/**
 * Created by hiteshkalra on 7/5/19.
 */
constants = require('../../config/constants');

const collectionName = constants.companyTable;
const skUtil = require('../../modules/util')

const nodeCache = require('node-cache')

const companyCache = new nodeCache({ stdTTL: 86400 })

exports.invalidateCache = (companyId) =>{
  console.log('Invalidating Company Cache',companyId)
  companyCache.del(companyId)
}


exports.getCompany = async (companyId) => {

  let companyInfo = companyCache.get(companyId)
  if(companyInfo){
    return companyInfo
  }

  let queryParams
  let query
    queryParams = [`${companyId}`]
    query = `
    SELECT *  FROM ${collectionName} 
    WHERE _id = $1
    ;
    `;


  try {
    const response = await global.pg.query(query,queryParams);
    if (!(response && response.rows && Array.isArray(response.rows) &&  response.rows.length >0)){
      return
    }
    const finalResponse = await skUtil.companyRecordDecrypt({_id:response.rows[0]._id,...response.rows[0].data})
    companyCache.set(companyId,finalResponse)
    return finalResponse
  } catch (err) {
    console.log(err)
    throw err
  }

};
